{"ast":null,"code":"// \nexport class AuthState {\n  constructor() {\n    this.user = null;\n  }\n\n}\nexport let AuthActionType;\n\n(function (AuthActionType) {\n  AuthActionType[\"Register\"] = \"Register\";\n  AuthActionType[\"Login\"] = \"Login\";\n  AuthActionType[\"Logout\"] = \"Logout\";\n})(AuthActionType || (AuthActionType = {}));\n\n//Function for each action\nexport function registerAction(user) {\n  return {\n    type: AuthActionType.Register,\n    payload: user\n  };\n}\nexport function loginAction(user) {\n  return {\n    type: AuthActionType.Login,\n    payload: user\n  };\n}\nexport function logoutAction() {\n  return {\n    type: AuthActionType.Logout\n  };\n}\nexport function authReducer(currentState = new AuthState(), action) {\n  const newState = { ...currentState\n  };\n\n  switch (action.type) {\n    case AuthActionType.Register:\n    case AuthActionType.Login:\n      newState.user = action.payload;\n      break;\n\n    case AuthActionType.Logout:\n      newState.user = null;\n      break;\n  }\n\n  return newState;\n}","map":{"version":3,"sources":["C:/Users/Eitan/Documents/JohnBryce/React/01 - Northwind/src/Redux/AuthState.ts"],"names":["AuthState","user","AuthActionType","registerAction","type","Register","payload","loginAction","Login","logoutAction","Logout","authReducer","currentState","action","newState"],"mappings":"AAEA;AACA,OAAO,MAAMA,SAAN,CAAgB;AAAA;AAAA,SACZC,IADY,GACM,IADN;AAAA;;AAAA;AAIvB,WAAYC,cAAZ;;WAAYA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c;;AAWZ;AACA,OAAO,SAASC,cAAT,CAAwBF,IAAxB,EAAqD;AACxD,SAAO;AAAEG,IAAAA,IAAI,EAAEF,cAAc,CAACG,QAAvB;AAAiCC,IAAAA,OAAO,EAAEL;AAA1C,GAAP;AACH;AACD,OAAO,SAASM,WAAT,CAAqBN,IAArB,EAAkD;AACrD,SAAO;AAAEG,IAAAA,IAAI,EAAEF,cAAc,CAACM,KAAvB;AAA8BF,IAAAA,OAAO,EAAEL;AAAvC,GAAP;AACH;AACD,OAAO,SAASQ,YAAT,GAAoC;AACvC,SAAO;AAAEL,IAAAA,IAAI,EAAEF,cAAc,CAACQ;AAAvB,GAAP;AACH;AAGD,OAAO,SAASC,WAAT,CAAqBC,YAAuB,GAAG,IAAIZ,SAAJ,EAA/C,EAAgEa,MAAhE,EAA+F;AAElG,QAAMC,QAAQ,GAAG,EAAC,GAAGF;AAAJ,GAAjB;;AAEA,UAAOC,MAAM,CAACT,IAAd;AACI,SAAKF,cAAc,CAACG,QAApB;AACA,SAAKH,cAAc,CAACM,KAApB;AACIM,MAAAA,QAAQ,CAACb,IAAT,GAAgBY,MAAM,CAACP,OAAvB;AACA;;AACJ,SAAKJ,cAAc,CAACQ,MAApB;AACII,MAAAA,QAAQ,CAACb,IAAT,GAAgB,IAAhB;AACA;AAPR;;AAWA,SAAOa,QAAP;AACH","sourcesContent":["import UserModel from \"../Models/UserModel\";\r\n\r\n// \r\nexport class AuthState {\r\n    public user: UserModel = null;\r\n}\r\n\r\nexport enum AuthActionType {\r\n    Register = \"Register\",\r\n    Login = \"Login\",\r\n    Logout = \"Logout\"\r\n}\r\n\r\nexport interface AuthAction {\r\n    type: AuthActionType;\r\n    payload?: any; // ? because logout needs no payload (sends no info to the server)\r\n}\r\n\r\n//Function for each action\r\nexport function registerAction(user: UserModel): AuthAction {\r\n    return { type: AuthActionType.Register, payload: user };\r\n}\r\nexport function loginAction(user: UserModel): AuthAction {\r\n    return { type: AuthActionType.Login, payload: user };\r\n}\r\nexport function logoutAction(): AuthAction {\r\n    return { type: AuthActionType.Logout };\r\n}\r\n\r\n\r\nexport function authReducer(currentState: AuthState = new AuthState(), action: AuthAction): AuthState {\r\n\r\n    const newState = {...currentState};\r\n\r\n    switch(action.type) {\r\n        case AuthActionType.Register:\r\n        case AuthActionType.Login:\r\n            newState.user = action.payload;\r\n            break;\r\n        case AuthActionType.Logout:\r\n            newState.user = null;\r\n            break;\r\n    }\r\n\r\n\r\n    return newState;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
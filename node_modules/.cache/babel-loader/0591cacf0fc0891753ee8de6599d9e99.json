{"ast":null,"code":"import { Notyf } from \"notyf\";\n\nclass Notify {\n  constructor() {\n    this.notification = new Notyf({\n      duration: 4000,\n      position: {\n        x: \"left\",\n        y: \"top\"\n      }\n    });\n  }\n\n  success(message) {\n    this.notification.success(message);\n  }\n\n  error(err) {\n    const message = this.extractMessage(err);\n    this.notification.error(message);\n  }\n\n  extractMessage(err) {\n    var _err$response, _err$response2;\n\n    if (typeof err === \"string\") {\n      return err;\n    }\n\n    if (typeof (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) === \"string\") {\n      // Backend exact error\n      return err.response.data;\n    }\n\n    if (Array.isArray(err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data)) {\n      // Backend exact errors\n      return err.response.data[0];\n    } // Must be last: \n\n\n    if (typeof (err === null || err === void 0 ? void 0 : err.message) === \"string\") {\n      return err.message;\n    }\n\n    return \"Some error occurred, please try again.\";\n  }\n\n}\n\nconst notify = new Notify();\nexport default notify;","map":{"version":3,"sources":["C:/Users/Eitan/Documents/JohnBryce/React/01 - Northwind/src/Services/Notification.ts"],"names":["Notyf","Notify","notification","duration","position","x","y","success","message","error","err","extractMessage","response","data","Array","isArray","notify"],"mappings":"AAAA,SAASA,KAAT,QAAsB,OAAtB;;AAEA,MAAMC,MAAN,CAAa;AAAA;AAAA,SAEDC,YAFC,GAEc,IAAIF,KAAJ,CAAU;AAAEG,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAE,MAAL;AAAaC,QAAAA,CAAC,EAAE;AAAhB;AAA5B,KAAV,CAFd;AAAA;;AAIFC,EAAAA,OAAO,CAACC,OAAD,EAAkB;AAC5B,SAAKN,YAAL,CAAkBK,OAAlB,CAA0BC,OAA1B;AACH;;AAEMC,EAAAA,KAAK,CAACC,GAAD,EAAW;AACnB,UAAMF,OAAO,GAAG,KAAKG,cAAL,CAAoBD,GAApB,CAAhB;AACA,SAAKR,YAAL,CAAkBO,KAAlB,CAAwBD,OAAxB;AACH;;AAEOG,EAAAA,cAAc,CAACD,GAAD,EAAmB;AAAA;;AAErC,QAAG,OAAOA,GAAP,KAAe,QAAlB,EAA4B;AACxB,aAAOA,GAAP;AACH;;AAED,QAAG,QAAOA,GAAP,aAAOA,GAAP,wCAAOA,GAAG,CAAEE,QAAZ,kDAAO,cAAeC,IAAtB,MAA+B,QAAlC,EAA4C;AAAE;AAC1C,aAAOH,GAAG,CAACE,QAAJ,CAAaC,IAApB;AACH;;AAED,QAAGC,KAAK,CAACC,OAAN,CAAcL,GAAd,aAAcA,GAAd,yCAAcA,GAAG,CAAEE,QAAnB,mDAAc,eAAeC,IAA7B,CAAH,EAAuC;AAAE;AACrC,aAAOH,GAAG,CAACE,QAAJ,CAAaC,IAAb,CAAkB,CAAlB,CAAP;AACH,KAZoC,CAcrC;;;AACA,QAAG,QAAOH,GAAP,aAAOA,GAAP,uBAAOA,GAAG,CAAEF,OAAZ,MAAwB,QAA3B,EAAqC;AACjC,aAAOE,GAAG,CAACF,OAAX;AACH;;AAED,WAAO,wCAAP;AACH;;AAjCQ;;AAqCb,MAAMQ,MAAM,GAAG,IAAIf,MAAJ,EAAf;AAEA,eAAee,MAAf","sourcesContent":["import { Notyf } from \"notyf\";\r\n\r\nclass Notify {\r\n\r\n    private notification = new Notyf({ duration: 4000, position: { x: \"left\", y: \"top\" } });\r\n\r\n    public success(message: string) {\r\n        this.notification.success(message);\r\n    }\r\n\r\n    public error(err: any) {\r\n        const message = this.extractMessage(err);\r\n        this.notification.error(message);\r\n    }\r\n\r\n    private extractMessage(err: any): string {\r\n\r\n        if(typeof err === \"string\") {\r\n            return err;\r\n        }\r\n        \r\n        if(typeof err?.response?.data === \"string\") { // Backend exact error\r\n            return err.response.data;\r\n        }\r\n\r\n        if(Array.isArray(err?.response?.data)) { // Backend exact errors\r\n            return err.response.data[0];\r\n        }\r\n\r\n        // Must be last: \r\n        if(typeof err?.message === \"string\") {\r\n            return err.message;\r\n        }\r\n\r\n        return \"Some error occurred, please try again.\";\r\n    }\r\n\r\n}\r\n\r\nconst notify = new Notify();\r\n\r\nexport default notify;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
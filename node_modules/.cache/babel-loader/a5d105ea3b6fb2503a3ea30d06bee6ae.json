{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eitan\\\\Documents\\\\JohnBryce\\\\React\\\\01 - Northwind\\\\src\\\\Components\\\\ProductsArea\\\\AddProduct\\\\AddProduct.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { productAddedAction } from \"../../../Redux/ProductsState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport notify from \"../../../Services/Notification\";\nimport \"./AddProduct.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddProduct() {\n  _s();\n\n  var _errors$name, _errors$name2, _errors$name3, _errors$price;\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const history = useHistory();\n  useEffect;\n\n  async function send(product) {\n    try {\n      // Convert ProductModel to FormData in order to send text + image to the backend:\n      const myFormData = new FormData();\n      myFormData.append(\"name\", product.name);\n      myFormData.append(\"price\", product.price.toString());\n      myFormData.append(\"stock\", product.stock.toString());\n      myFormData.append(\"image\", product.image.item(0));\n      const response = await axios.post(globals.urls.products, myFormData);\n      const addedProduct = response.data; // With Redux:\n\n      store.dispatch(productAddedAction(addedProduct));\n      notify.success(\"Product has been added! id: \" + addedProduct.id);\n      history.push(\"/products\");\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddProduct Box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(send),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        ref: register({\n          required: true,\n          minLength: 3,\n          pattern: /^[A-Z].+$/\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), ((_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Missing name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 54\n      }, this), ((_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Name too short.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 55\n      }, this), ((_errors$name3 = errors.name) === null || _errors$name3 === void 0 ? void 0 : _errors$name3.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Name must start with a capital letter.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 53\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        name: \"price\",\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing Price.\"\n          },\n          min: {\n            value: 0,\n            message: \"Price can't be negative.\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_errors$price = errors.price) === null || _errors$price === void 0 ? void 0 : _errors$price.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Stock: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"stock\",\n        ref: register({\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), errors.stock && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Missing stock.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Image: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        ref: register({\n          required: true\n        }),\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), errors.image && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Missing image.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddProduct, \"OxBzvLvyqkluHWa37TdHftQcVy0=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["C:/Users/Eitan/Documents/JohnBryce/React/01 - Northwind/src/Components/ProductsArea/AddProduct/AddProduct.tsx"],"names":["axios","useEffect","useForm","useHistory","productAddedAction","store","globals","notify","AddProduct","register","handleSubmit","errors","history","send","product","myFormData","FormData","append","name","price","toString","stock","image","item","response","post","urls","products","addedProduct","data","dispatch","success","id","push","err","error","required","minLength","pattern","type","value","message","min"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport ProductModel from \"../../../Models/ProductModel\";\nimport { productAddedAction } from \"../../../Redux/ProductsState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport notify from \"../../../Services/Notification\";\nimport \"./AddProduct.css\";\n\nfunction AddProduct(): JSX.Element {\n\n    const { register, handleSubmit, errors } = useForm<ProductModel>();\n    const history = useHistory();\n\n    useEffect    \n\n    async function send(product: ProductModel) {\n        try {\n\n            // Convert ProductModel to FormData in order to send text + image to the backend:\n            const myFormData = new FormData();\n            myFormData.append(\"name\", product.name);\n            myFormData.append(\"price\", product.price.toString());\n            myFormData.append(\"stock\", product.stock.toString());\n            myFormData.append(\"image\", product.image.item(0));\n\n            const response = await axios.post<ProductModel>(globals.urls.products, myFormData);\n            const addedProduct = response.data;\n\n            // With Redux:\n            store.dispatch(productAddedAction(addedProduct));\n            notify.success(\"Product has been added! id: \" + addedProduct.id);\n            history.push(\"/products\");\n        }\n        catch (err) {\n            notify.error(err);\n        }\n    }\n\n    return (\n        <div className=\"AddProduct Box\">\n\n            <h2>Add Product</h2>\n\n            <form onSubmit={handleSubmit(send)}>\n\n                <label>Name: </label> <br />\n                <input type=\"text\" name=\"name\" ref={register({ required: true, minLength: 3, pattern: /^[A-Z].+$/ })} />\n                {errors.name?.type === \"required\" && <span>Missing name.</span>}\n                {errors.name?.type === \"minLength\" && <span>Name too short.</span>}\n                {errors.name?.type === \"pattern\" && <span>Name must start with a capital letter.</span>}\n                <br /> <br />\n\n                <label>Price: </label> <br />\n                <input type=\"number\" step=\"0.01\" name=\"price\" ref={register({\n                    required: { value: true, message: \"Missing Price.\" },\n                    min: { value: 0, message: \"Price can't be negative.\" }\n                })} />\n                <span>{errors.price?.message}</span>\n                <br /> <br />\n\n                <label>Stock: </label> <br />\n                <input type=\"number\" name=\"stock\" ref={register({ required: true })} />\n                {errors.stock && <span>Missing stock.</span>}\n                <br /> <br />\n\n                <label>Image: </label> <br />\n                <input type=\"file\" name=\"image\" ref={register({ required: true })} accept=\"image/*\" />\n                {errors.image && <span>Missing image.</span>}\n                <br /> <br />\n\n                <button>Add</button>\n\n            </form>\n\n        </div>\n    );\n}\n\nexport default AddProduct;\n"]},"metadata":{},"sourceType":"module"}
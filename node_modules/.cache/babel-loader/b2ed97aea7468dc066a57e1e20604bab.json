{"ast":null,"code":"// Handling Products AppState\n// Products AppState - המידע ברמת האפליקציה הקשור למוצרים - אלו בעצם כל המוצרים:\nexport class ProductsState {\n  constructor() {\n    this.products = [];\n  } // We're going to create initial object\n\n\n} // ----------------------------------------------------------------------------------\n// Products Action Types - אלו פעולות ניתן לבצע על המידע ברמת האפליקציה:\n\nexport let ProductsActionType; // ----------------------------------------------------------------------------------\n// Product Action - אובייקט המכיל את המידע עבור הפעולה שאנו מבצעים על המידע ברמת הפליקציה\n\n(function (ProductsActionType) {\n  ProductsActionType[\"ProductsDownloaded\"] = \"ProductsDownloaded\";\n  ProductsActionType[\"ProductAdded\"] = \"ProductAdded\";\n  ProductsActionType[\"ProductUpdated\"] = \"ProductUpdated\";\n  ProductsActionType[\"ProductDeleted\"] = \"ProductDeleted\";\n})(ProductsActionType || (ProductsActionType = {}));\n\n// ----------------------------------------------------------------------------------\n// Products Action Creators - מתאים עבור כל פעולה Action ומחזירות אובייקט payload-פונקציות המקבלות את ה\nexport function productsDownloadedAction(products) {\n  return {\n    type: ProductsActionType.ProductsDownloaded,\n    payload: products\n  };\n}\nexport function productAddedAction(product) {\n  return {\n    type: ProductsActionType.ProductAdded,\n    payload: product\n  };\n}\nexport function productUpdatedAction(product) {\n  return {\n    type: ProductsActionType.ProductUpdated,\n    payload: product\n  };\n}\nexport function productDeletedAction(id) {\n  return {\n    type: ProductsActionType.ProductDeleted,\n    payload: id\n  };\n} // ----------------------------------------------------------------------------------\n// Products Reducer - פונקציה המבצעת את הפעולה בפועל\n\nexport function productsReducer(currentState = new ProductsState(), action) {\n  const newState = { ...currentState\n  }; // Spread Operator - שכפול אובייקט\n\n  switch (action.type) {\n    case ProductsActionType.ProductsDownloaded:\n      newState.products = action.payload; // Here payload is all products!\n\n      break;\n\n    case ProductsActionType.ProductAdded:\n      newState.products.push(action.payload); // Here payload is the added product!\n\n      break;\n\n    case ProductsActionType.ProductUpdated:\n      // Do the correct action...\n      break;\n\n    case ProductsActionType.ProductDeleted:\n      // Do the correct action...\n      break;\n  }\n\n  return newState;\n}","map":{"version":3,"sources":["C:/Users/Eitan/Documents/JohnBryce/React/01 - Northwind/src/Redux/ProductsState.ts"],"names":["ProductsState","products","ProductsActionType","productsDownloadedAction","type","ProductsDownloaded","payload","productAddedAction","product","ProductAdded","productUpdatedAction","ProductUpdated","productDeletedAction","id","ProductDeleted","productsReducer","currentState","action","newState","push"],"mappings":"AACA;AAIA;AACA,OAAO,MAAMA,aAAN,CAAoB;AAAA;AAAA,SAChBC,QADgB,GACW,EADX;AAAA,IACe;;;AADf,C,CAI3B;AAEA;;AACA,WAAYC,kBAAZ,C,CAOA;AAEA;;WATYA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;GAAAA,kB,KAAAA,kB;;AAeZ;AAEA;AAEA,OAAO,SAASC,wBAAT,CAAkCF,QAAlC,EAA2E;AAC9E,SAAO;AAAEG,IAAAA,IAAI,EAAEF,kBAAkB,CAACG,kBAA3B;AAA+CC,IAAAA,OAAO,EAAEL;AAAxD,GAAP;AACH;AACD,OAAO,SAASM,kBAAT,CAA4BC,OAA5B,EAAkE;AACrE,SAAO;AAAEJ,IAAAA,IAAI,EAAEF,kBAAkB,CAACO,YAA3B;AAAyCH,IAAAA,OAAO,EAAEE;AAAlD,GAAP;AACH;AACD,OAAO,SAASE,oBAAT,CAA8BF,OAA9B,EAAoE;AACvE,SAAO;AAAEJ,IAAAA,IAAI,EAAEF,kBAAkB,CAACS,cAA3B;AAA2CL,IAAAA,OAAO,EAAEE;AAApD,GAAP;AACH;AACD,OAAO,SAASI,oBAAT,CAA8BC,EAA9B,EAAyD;AAC5D,SAAO;AAAET,IAAAA,IAAI,EAAEF,kBAAkB,CAACY,cAA3B;AAA2CR,IAAAA,OAAO,EAAEO;AAApD,GAAP;AACH,C,CAED;AAEA;;AACA,OAAO,SAASE,eAAT,CAAyBC,YAA2B,GAAG,IAAIhB,aAAJ,EAAvD,EAA4EiB,MAA5E,EAAkH;AAErH,QAAMC,QAAQ,GAAG,EAAC,GAAGF;AAAJ,GAAjB,CAFqH,CAEjF;;AAEpC,UAAOC,MAAM,CAACb,IAAd;AACI,SAAKF,kBAAkB,CAACG,kBAAxB;AACIa,MAAAA,QAAQ,CAACjB,QAAT,GAAoBgB,MAAM,CAACX,OAA3B,CADJ,CACwC;;AACpC;;AACJ,SAAKJ,kBAAkB,CAACO,YAAxB;AACIS,MAAAA,QAAQ,CAACjB,QAAT,CAAkBkB,IAAlB,CAAuBF,MAAM,CAACX,OAA9B,EADJ,CAC4C;;AACxC;;AACJ,SAAKJ,kBAAkB,CAACS,cAAxB;AACI;AACA;;AACJ,SAAKT,kBAAkB,CAACY,cAAxB;AACI;AACA;AAZR;;AAeA,SAAOI,QAAP;AACH","sourcesContent":["\r\n// Handling Products AppState\r\n\r\nimport ProductModel from \"../Models/ProductModel\";\r\n\r\n// Products AppState - המידע ברמת האפליקציה הקשור למוצרים - אלו בעצם כל המוצרים:\r\nexport class ProductsState {\r\n    public products: ProductModel[] = []; // We're going to create initial object\r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n\r\n// Products Action Types - אלו פעולות ניתן לבצע על המידע ברמת האפליקציה:\r\nexport enum ProductsActionType {\r\n    ProductsDownloaded = \"ProductsDownloaded\",\r\n    ProductAdded = \"ProductAdded\",\r\n    ProductUpdated = \"ProductUpdated\",\r\n    ProductDeleted = \"ProductDeleted\"\r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n\r\n// Product Action - אובייקט המכיל את המידע עבור הפעולה שאנו מבצעים על המידע ברמת הפליקציה\r\nexport interface ProductAction {\r\n    type: ProductsActionType;\r\n    payload: any; // payload?: any; if the payload can be empty.\r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n\r\n// Products Action Creators - מתאים עבור כל פעולה Action ומחזירות אובייקט payload-פונקציות המקבלות את ה\r\n\r\nexport function productsDownloadedAction(products: ProductModel[]): ProductAction {\r\n    return { type: ProductsActionType.ProductsDownloaded, payload: products };\r\n}\r\nexport function productAddedAction(product: ProductModel): ProductAction {\r\n    return { type: ProductsActionType.ProductAdded, payload: product };\r\n}\r\nexport function productUpdatedAction(product: ProductModel): ProductAction {\r\n    return { type: ProductsActionType.ProductUpdated, payload: product };\r\n}\r\nexport function productDeletedAction(id: number): ProductAction {\r\n    return { type: ProductsActionType.ProductDeleted, payload: id };\r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n\r\n// Products Reducer - פונקציה המבצעת את הפעולה בפועל\r\nexport function productsReducer(currentState: ProductsState = new ProductsState(), action: ProductAction): ProductsState {\r\n    \r\n    const newState = {...currentState}; // Spread Operator - שכפול אובייקט\r\n\r\n    switch(action.type) {\r\n        case ProductsActionType.ProductsDownloaded:\r\n            newState.products = action.payload; // Here payload is all products!\r\n            break;\r\n        case ProductsActionType.ProductAdded:\r\n            newState.products.push(action.payload); // Here payload is the added product!\r\n            break;\r\n        case ProductsActionType.ProductUpdated: \r\n            // Do the correct action...\r\n            break;\r\n        case ProductsActionType.ProductDeleted: \r\n            // Do the correct action...\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}